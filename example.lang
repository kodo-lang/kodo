type Foo = struct {
    a: i16;
    b: i32;
};

fn exit(let code: u64) {
    asm(
        "syscall",
        clobber("rcx"),
        clobber("r11"),
        in("rax", cast<u64>(60)),
        in("rdi", code),
    );
}

fn write(let fd: u64, let buf: *u8, let len: u64) {
    asm(
        "syscall",
        clobber("rcx"),
        clobber("r11"),
        in("rax", cast<i64>(1)),
        in("rdi", fd),
        in("rsi", buf),
        in("rdx", len),
    );
}

fn set(let foo: *mut Foo) {
    *foo = Foo{4, 5};
}

fn add(let foo: Foo): i32 {
    return foo.a + foo.b;
}

fn main(): i32 {
    write(1, "Hello, world!", 13);
    var foo = Foo{1, 2};
    set(&foo);
    return add(foo);
}

fn _start() {
    exit(main());
}
